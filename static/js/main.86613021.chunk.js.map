{"version":3,"sources":["components/Title.js","components/Editor.js","components/Previewer.js","components/App.js","init/index.js","index.js"],"names":["Title","props","className","text","Editor","id","onChange","type","value","markdown","Previewer","dangerouslySetInnerHTML","__html","window","marked","App","state","handleChange","bind","e","this","setState","target","setOptions","breaks","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gOAKeA,EALD,SAAAC,GAAK,OACjB,qBAAKC,UAAU,QAAf,SAAwBD,EAAME,QCSjBC,EAVA,SAAAH,GAAK,OAClB,0BACEI,GAAG,SACHH,UAAU,WACVI,SAAUL,EAAMK,SAChBC,KAAK,OACLC,MAAOP,EAAMQ,YCIFC,EAVG,SAAAT,GAAK,OACrB,qBACEI,GAAG,UACHH,UAAU,WACVS,wBAAyB,CACvBC,OAAQC,OAAOC,OAAOb,EAAMQ,cCsCnBM,E,kDApCb,WAAYd,GAAQ,IAAD,8BACjB,cAAMA,IACDe,MAAQ,CACXP,SCVW,ymCDab,EAAKQ,aAAe,EAAKA,aAAaC,KAAlB,gBANH,E,yDASNC,GACXC,KAAKC,SAAS,CACZZ,SAAUU,EAAEG,OAAOd,U,+BASrB,OAJAK,OAAOC,OAAOS,WAAW,CACvBC,QAAQ,IAIR,sBAAKtB,UAAU,YAAf,UACE,oBAAIG,GAAG,aAAP,gCACA,sBAAKH,UAAU,OAAf,UACE,cAAC,EAAD,CAAOC,KAAK,WACZ,cAAC,EAAD,CAAQM,SAAUW,KAAKJ,MAAMP,SAAUH,SAAUc,KAAKH,kBAExD,sBAAKf,UAAU,OAAf,UACE,cAAC,EAAD,CAAOC,KAAK,cACZ,cAAC,EAAD,CAAWM,SAAUW,KAAKJ,MAAMP,qB,UA9BxBgB,EAAMC,W,MEDxBC,IAASC,OAAO,cAAC,EAAD,IACdC,SAASC,eAAe,W","file":"static/js/main.86613021.chunk.js","sourcesContent":["const Title = props => (\n  <div className='title'>{props.text}</div>\n);\n\n\nexport default Title;\n","const Editor = props => (\n  <textarea\n    id='editor'\n    className=\"textarea\"\n    onChange={props.onChange}\n    type='text'\n    value={props.markdown}\n  />\n);\n\nexport default Editor;\n","const Previewer = props => (\n  <div\n    id=\"preview\"\n    className=\"textarea\"\n    dangerouslySetInnerHTML={{\n      __html: window.marked(props.markdown)\n    }}\n  />\n);\n\nexport default Previewer;\n","import React from 'react';\nimport Title from './Title'\nimport Editor from './Editor'\nimport Previewer from './Previewer'\nimport placeholder from '../init';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      markdown: placeholder,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      markdown: e.target.value\n    });\n  }\n\n  render() {\n    window.marked.setOptions({\n      breaks: true\n    });\n\n    return (\n      <div className=\"container\">\n        <h1 id=\"page_title\">Markdown Previewer</h1>\n        <div className=\"wrap\">\n          <Title text='Editor' />\n          <Editor markdown={this.state.markdown} onChange={this.handleChange} />\n        </div>\n        <div className=\"wrap\">\n          <Title text='Previewer' />\n          <Previewer markdown={this.state.markdown} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const placeholder = `# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nconst anotherExample = (firstLine, lastLine) => {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here...\nAnd here. | Okay. | I think we get it.\n\n- And of course, there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That looks like this.\n\n\n1. And there are numbered lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://goo.gl/Umyytc)\n`;\n\nexport default placeholder;\n","import ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport './style/main.css';\n\nReactDOM.render(<App />,\n  document.getElementById('root'));\n"],"sourceRoot":""}